{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["getFactorial","e","a","num","document","querySelector","value","url","message","fetch","res","text","ans","status","textContent","style","fontSize","checkKey","key","App","className","type","onKeyDown","placeholder","onClick","id","data-testid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0OAIMA,EAAY,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,yDAEL,MADNC,EAAMC,SAASC,cAAc,SAASC,OAD3B,wDAKXC,EALW,sEAK0DJ,GACrEK,EAAUJ,SAASC,cAAc,WANtB,SAQLI,MAAMF,GARD,cAQjBG,EARiB,iBASCA,EAAIC,OATL,QASXC,EATW,OAUE,MAAfF,EAAIG,QACJL,EAAQM,YAAR,UAAyBX,EAAzB,eAAmCS,GACnCJ,EAAQO,MAAMC,SAAW,QAEzBR,EAAQM,YAAcF,EACtBJ,EAAQO,MAAMC,SAAW,OAfZ,4CAAH,sDAoBZC,EAAQ,uCAAG,WAAOhB,GAAP,SAAAC,EAAA,yDACC,UAAVD,EAAEiB,IADO,gCAEHlB,IAFG,2CAAH,sDA8BCmB,MAvBf,WAEI,OACI,sBAAKC,UAAU,MAAf,UACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKA,UAAU,WAAf,SACI,uCAEJ,6CAIJ,sBAAKA,UAAU,WAAf,UACI,uBAAOC,KAAK,OAAOC,UAAWL,EAAUG,UAAU,SAASG,YAAY,mBACvE,wBAAQC,QAASxB,EAAjB,2BACA,mBAAGyB,GAAG,SAASC,cAAY,SAA3B,yBClCDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,SAM1BZ,M","file":"static/js/main.d4e260ac.chunk.js","sourcesContent":["import './App.css';\n\n\n\nconst getFactorial = async (e) => {\n    const num = document.querySelector(\"input\").value;\n    if (num === \"\") {\n        return;\n    }\n    const url = `https://factorial-factory.herokuapp.com/api/factorial?input=${num}`;\n    const message = document.querySelector(\"#answer\");\n    let res;\n    res = await fetch(url);\n    const ans = await res.text();\n    if (res.status === 200) {\n        message.textContent = `${num}! = ${ans}`;\n        message.style.fontSize = \"2em\";\n    } else {\n        message.textContent = ans;\n        message.style.fontSize = \"1em\";\n    }\n\n}\n\nconst checkKey = async (e) => {\n    if (e.key === 'Enter') {\n        await getFactorial();\n    }\n}\n\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div className=\"App-logo\">\n                    <h1>n !</h1>\n                </div>\n                <p>\n                    Factorial\n                </p>\n            </header>\n            <div className=\"App-body\">\n                <input type=\"text\" onKeyDown={checkKey} className=\"number\" placeholder=\"Enter a number\" />\n                <button onClick={getFactorial}>Get Factorial</button>\n                <p id=\"answer\" data-testid=\"answer\">&nbsp;</p>\n            </div>\n        </div>\n    );\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}